{"version":3,"sources":["bling.js","components.js","methods.js","index.js"],"names":["$","document","querySelector","bind","$$","querySelectorAll","Node","prototype","on","window","name","fn","addEventListener","NodeList","__proto__","Array","forEach","elem","banana","fontSize","randomNumber","min","max","Math","floor","random","sizes","randomSize","getAnimationPlayState","getComputedStyle","rootElement","getPropertyValue","trim","insertBanana","id","insertAdjacentHTML","togglePlayState","state","style","setProperty","isPlaying","resetPlayState","destroyBananas","element","innerHTML","intervalId","intervalSpeed","documentElement","playState","setInterval","clearInterval","observer","MutationObserver","mutationsList","mutation","type","bananaNode","addedNodes","filter","node","innerText","length","classList","remove","add","event","target","parentNode","removeChild","attributeName","observe","attributes","childList","subtree"],"mappings":"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","file":"src.a2e20e7a.map","sourceRoot":"../src","sourcesContent":["// based on https://gist.github.com/paulirish/12fb951a8b893a454b32\n\nconst $ = document.querySelector.bind(document);\nconst $$ = document.querySelectorAll.bind(document);\n\nNode.prototype.on = window.on = function(name, fn) {\n  this.addEventListener(name, fn);\n};\n\nNodeList.prototype.__proto__ = Array.prototype; // eslint-disable-line\n\nNodeList.prototype.on = NodeList.prototype.addEventListener = function(\n  name,\n  fn,\n) {\n  this.forEach(elem => {\n    elem.on(name, fn);\n  });\n};\n\nexport { $, $$ };\n","const banana = (fontSize = 40) => {\n  return `\n    <button \n      class=\"banana animation\" \n      type=\"button\"\n      style=\"font-size: ${fontSize}px; width: ${fontSize}px; height: ${fontSize}px\"\n    >\n      üçå\n    </button>\n  `;\n};\n\nexport { banana };\n","import { $, $$ } from \"./bling\";\nimport { banana } from \"./components\";\n\nexport const randomNumber = (min, max) => Math.floor(Math.random() * (max - min) + min);\n\nexport const sizes = [30, 40, 50, 60, 70, 75, 80, 85, 90, 95];\n\nexport const randomSize = () => sizes[randomNumber(0, 9)];\n\nexport const getAnimationPlayState = rootElement =>\n  getComputedStyle(rootElement)\n    .getPropertyValue(\"--animation-play-state\")\n    .trim();\n\nexport const insertBanana = () => {\n  let id = randomNumber(1, 5);\n  let fontSize = randomSize();\n  $(`#column-${id}`).insertAdjacentHTML(\"afterbegin\", banana(fontSize));\n};\n\nexport const togglePlayState = (state, rootElement) => {\n  rootElement.style.setProperty(\"--animation-play-state\", state.isPlaying ? \"running\" : \"paused\");\n};\n\nexport const resetPlayState = (state, rootElement) => {\n  rootElement.style.setProperty(\"--animation-play-state\", state.isPlaying ? \"running\" : \"paused\");\n};\n\nexport const destroyBananas = () => {\n  $$(\".column\").forEach(element => {\n    element.innerHTML = \"\";\n  });\n};\n","import { $ } from \"./bling\";\nimport {\n  getAnimationPlayState,\n  insertBanana,\n  togglePlayState,\n  resetPlayState,\n  destroyBananas\n} from \"./methods\";\n\nlet intervalId;\n\nlet state = {\n  isPlaying: false,\n  intervalSpeed: 900\n};\n\n$(\".togglePlay\").on(\"click\", () => {\n  state = { ...state, isPlaying: !state.isPlaying };\n  togglePlayState(state, document.documentElement);\n\n  const playState = getAnimationPlayState(document.documentElement);\n\n  if (playState === \"running\") {\n    intervalId = setInterval(insertBanana, state.intervalSpeed);\n  } else {\n    clearInterval(intervalId);\n  }\n});\n\n$(\".reset\").on(\"click\", () => {\n  state = { ...state, isPlaying: false };\n  resetPlayState(state, document.documentElement);\n  clearInterval(intervalId);\n  destroyBananas();\n});\n\nconst observer = new MutationObserver(mutationsList => {\n  for (let mutation of mutationsList) {\n    if (mutation.type == \"childList\") {\n      const bananaNode = [...mutation.addedNodes].filter(node => node.innerText === \"üçå\");\n\n      if (bananaNode && bananaNode.length > 0) {\n        const banana = bananaNode[0];\n        banana.classList.remove(\"animation\");\n        banana.classList.add(\"animation\");\n        banana.addEventListener(\"animationend\", event => {\n          event.target.parentNode.removeChild(event.target);\n        });\n      }\n    }\n\n    if (mutation.type == \"attributes\" && mutation.attributeName == \"style\") {\n      // Change togglePlay button to say Paused or Start based on state\n      $(\".togglePlay\").innerHTML = state.isPlaying ? \"Pause\" : \"Start\";\n    }\n  }\n});\n\nobserver.observe($(\"#html\"), {\n  attributes: true,\n  childList: true,\n  subtree: true\n});\n"]}